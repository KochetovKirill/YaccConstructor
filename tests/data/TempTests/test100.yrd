binExpr<<operand binOp>>
: l=operand r=(op=binOp r=operand {(op,r)})*
  {List.fold_left (fun l (op,r) -> op l r) l r }
;

termOp: PLUS {( +. )} | MINUS { ( -. ) } ;

factorOp: MULT {( *. )} | DIV { ( /. ) } ;

powOp: POW { ( ** ) } ;

powExpr: n=NUMBER { float n } | (LEFT e=expr RIGHT) { e } ;

factor: res=binExpr<<powExpr powOp>> { res } ;

term: res=binExpr<<factor factorOp>> { res } ;

+expr: res=binExpr<<term termOp>> { res } ;

