{
let f1 = printfn "%s %A"
let f2 = printfn "%s %A %A"
}
[<Start>]
s: arg1=e arg2=A {f2 "a" arg1 arg2} |
   arg=X {f1 "x" arg}


e: arg=X arg3=B yard_lst=yard_lr_e
{let yard_tmp =
    let arg1 =
        f1 "x" arg
    f2 "b" arg1 arg3
List.fold (fun s f -> f s) yard_tmp yard_lst} |

   arg=Y yard_lst=yard_lr_e
{let yard_tmp =
    f1 "y" arg
List.fold (fun s f -> f s) yard_tmp yard_lst}


yard_lr_e: { [] } |
           
           arg2=A arg3=B yard_lst=yard_lr_e
{(fun (arg1) ->
    let arg1 =
        f2 "a" arg1 arg2
    f2 "b" arg1 arg3
)::yard_lst}