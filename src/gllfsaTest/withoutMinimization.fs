module WithoutMinimization.r16s
#nowarn "64";; // From fsyacc: turn off warnings that type variables used in production annotations are instantiated to concrete type
open Yard.Generators.GLL
open Yard.Generators.GLL.ParserCommon

type Token =
    | A of unit
    | B of unit
    | C of unit
    | D of unit
    | E of unit
    | F of unit
    | L of unit
    | K of unit

let tokenToNumber = function
    | A() -> 408
    | B() -> 409
    | C() -> 410
    | D() -> 411
    | E() -> 412
    | F() -> 413
    | L() -> 414
    | K() -> 415

let numToString = function
    | 408 -> "A"
    | 409 -> "B"
    | 410 -> "C"
    | 411 -> "D"
    | 412 -> "E"
    | 413 -> "F"
    | 414 -> "L"
    | 415 -> "K"
    | 0 -> "s"
    | 1 -> "a"
    | 2 -> "b"
    | 3 -> "c"
    | 4 -> "d"
    | 5 -> "e"
    | 6 -> "f"
    | 7 -> "l"
    | 8 -> "k"
    | _ -> ""

let numIsTerminal = function
    | 408 -> true
    | 409 -> true
    | 410 -> true
    | 411 -> true
    | 412 -> true
    | 413 -> true
    | 414 -> true
    | 415 -> true
    | _ -> false

let numIsEpsilon = function
    | -1 -> true
    | _ -> false

let statesToConvert =
  [|[|1,10;2,75;3,140;4,205;5,270;6,335|];
    [|408,400|];
    [|408,401;409,401|];
    [|408,402;410,402|];
    [|408,403;411,403|];
    [|408,404;412,404|];
    [|408,405;413,405|];
    [|414,406|];
    [|415,407|];
    [||];
    [|7,11|];
    [|8,12|];
    [|7,13|];
    [|8,14|];
    [|7,15|];
    [|8,16|];
    [|7,17|];
    [|8,18|];
    [|7,19|];
    [|8,20|];
    [|7,21|];
    [|8,22|];
    [|7,23|];
    [|8,24|];
    [|7,25|];
    [|8,26|];
    [|7,27|];
    [|8,28|];
    [|7,29|];
    [|8,30|];
    [|7,31|];
    [|8,32|];
    [|7,33|];
    [|8,34|];
    [|7,35|];
    [|8,36|];
    [|7,37|];
    [|8,38|];
    [|7,39|];
    [|8,40|];
    [|7,41|];
    [|8,42|];
    [|7,43|];
    [|8,44|];
    [|7,45|];
    [|8,46|];
    [|7,47|];
    [|8,48|];
    [|7,49|];
    [|8,50|];
    [|7,51|];
    [|8,52|];
    [|7,53|];
    [|8,54|];
    [|7,55|];
    [|8,56|];
    [|7,57|];
    [|8,58|];
    [|7,59|];
    [|8,60|];
    [|7,61|];
    [|8,62|];
    [|7,63|];
    [|8,64|];
    [|7,65|];
    [|8,66|];
    [|7,67|];
    [|8,68|];
    [|7,69|];
    [|8,70|];
    [|7,71|];
    [|8,72|];
    [|7,73|];
    [|8,74|];
    [|0,9|];
    [|7,76|];
    [|8,77|];
    [|7,78|];
    [|8,79|];
    [|7,80|];
    [|8,81|];
    [|7,82|];
    [|8,83|];
    [|7,84|];
    [|8,85|];
    [|7,86|];
    [|8,87|];
    [|7,88|];
    [|8,89|];
    [|7,90|];
    [|8,91|];
    [|7,92|];
    [|8,93|];
    [|7,94|];
    [|8,95|];
    [|7,96|];
    [|8,97|];
    [|7,98|];
    [|8,99|];
    [|7,100|];
    [|8,101|];
    [|7,102|];
    [|8,103|];
    [|7,104|];
    [|8,105|];
    [|7,106|];
    [|8,107|];
    [|7,108|];
    [|8,109|];
    [|7,110|];
    [|8,111|];
    [|7,112|];
    [|8,113|];
    [|7,114|];
    [|8,115|];
    [|7,116|];
    [|8,117|];
    [|7,118|];
    [|8,119|];
    [|7,120|];
    [|8,121|];
    [|7,122|];
    [|8,123|];
    [|7,124|];
    [|8,125|];
    [|7,126|];
    [|8,127|];
    [|7,128|];
    [|8,129|];
    [|7,130|];
    [|8,131|];
    [|7,132|];
    [|8,133|];
    [|7,134|];
    [|8,135|];
    [|7,136|];
    [|8,137|];
    [|7,138|];
    [|8,139|];
    [|0,9|];
    [|7,141|];
    [|8,142|];
    [|7,143|];
    [|8,144|];
    [|7,145|];
    [|8,146|];
    [|7,147|];
    [|8,148|];
    [|7,149|];
    [|8,150|];
    [|7,151|];
    [|8,152|];
    [|7,153|];
    [|8,154|];
    [|7,155|];
    [|8,156|];
    [|7,157|];
    [|8,158|];
    [|7,159|];
    [|8,160|];
    [|7,161|];
    [|8,162|];
    [|7,163|];
    [|8,164|];
    [|7,165|];
    [|8,166|];
    [|7,167|];
    [|8,168|];
    [|7,169|];
    [|8,170|];
    [|7,171|];
    [|8,172|];
    [|7,173|];
    [|8,174|];
    [|7,175|];
    [|8,176|];
    [|7,177|];
    [|8,178|];
    [|7,179|];
    [|8,180|];
    [|7,181|];
    [|8,182|];
    [|7,183|];
    [|8,184|];
    [|7,185|];
    [|8,186|];
    [|7,187|];
    [|8,188|];
    [|7,189|];
    [|8,190|];
    [|7,191|];
    [|8,192|];
    [|7,193|];
    [|8,194|];
    [|7,195|];
    [|8,196|];
    [|7,197|];
    [|8,198|];
    [|7,199|];
    [|8,200|];
    [|7,201|];
    [|8,202|];
    [|7,203|];
    [|8,204|];
    [|0,9|];
    [|7,206|];
    [|8,207|];
    [|7,208|];
    [|8,209|];
    [|7,210|];
    [|8,211|];
    [|7,212|];
    [|8,213|];
    [|7,214|];
    [|8,215|];
    [|7,216|];
    [|8,217|];
    [|7,218|];
    [|8,219|];
    [|7,220|];
    [|8,221|];
    [|7,222|];
    [|8,223|];
    [|7,224|];
    [|8,225|];
    [|7,226|];
    [|8,227|];
    [|7,228|];
    [|8,229|];
    [|7,230|];
    [|8,231|];
    [|7,232|];
    [|8,233|];
    [|7,234|];
    [|8,235|];
    [|7,236|];
    [|8,237|];
    [|7,238|];
    [|8,239|];
    [|7,240|];
    [|8,241|];
    [|7,242|];
    [|8,243|];
    [|7,244|];
    [|8,245|];
    [|7,246|];
    [|8,247|];
    [|7,248|];
    [|8,249|];
    [|7,250|];
    [|8,251|];
    [|7,252|];
    [|8,253|];
    [|7,254|];
    [|8,255|];
    [|7,256|];
    [|8,257|];
    [|7,258|];
    [|8,259|];
    [|7,260|];
    [|8,261|];
    [|7,262|];
    [|8,263|];
    [|7,264|];
    [|8,265|];
    [|7,266|];
    [|8,267|];
    [|7,268|];
    [|8,269|];
    [|0,9|];
    [|7,271|];
    [|8,272|];
    [|7,273|];
    [|8,274|];
    [|7,275|];
    [|8,276|];
    [|7,277|];
    [|8,278|];
    [|7,279|];
    [|8,280|];
    [|7,281|];
    [|8,282|];
    [|7,283|];
    [|8,284|];
    [|7,285|];
    [|8,286|];
    [|7,287|];
    [|8,288|];
    [|7,289|];
    [|8,290|];
    [|7,291|];
    [|8,292|];
    [|7,293|];
    [|8,294|];
    [|7,295|];
    [|8,296|];
    [|7,297|];
    [|8,298|];
    [|7,299|];
    [|8,300|];
    [|7,301|];
    [|8,302|];
    [|7,303|];
    [|8,304|];
    [|7,305|];
    [|8,306|];
    [|7,307|];
    [|8,308|];
    [|7,309|];
    [|8,310|];
    [|7,311|];
    [|8,312|];
    [|7,313|];
    [|8,314|];
    [|7,315|];
    [|8,316|];
    [|7,317|];
    [|8,318|];
    [|7,319|];
    [|8,320|];
    [|7,321|];
    [|8,322|];
    [|7,323|];
    [|8,324|];
    [|7,325|];
    [|8,326|];
    [|7,327|];
    [|8,328|];
    [|7,329|];
    [|8,330|];
    [|7,331|];
    [|8,332|];
    [|7,333|];
    [|8,334|];
    [|0,9|];
    [|7,336|];
    [|8,337|];
    [|7,338|];
    [|8,339|];
    [|7,340|];
    [|8,341|];
    [|7,342|];
    [|8,343|];
    [|7,344|];
    [|8,345|];
    [|7,346|];
    [|8,347|];
    [|7,348|];
    [|8,349|];
    [|7,350|];
    [|8,351|];
    [|7,352|];
    [|8,353|];
    [|7,354|];
    [|8,355|];
    [|7,356|];
    [|8,357|];
    [|7,358|];
    [|8,359|];
    [|7,360|];
    [|8,361|];
    [|7,362|];
    [|8,363|];
    [|7,364|];
    [|8,365|];
    [|7,366|];
    [|8,367|];
    [|7,368|];
    [|8,369|];
    [|7,370|];
    [|8,371|];
    [|7,372|];
    [|8,373|];
    [|7,374|];
    [|8,375|];
    [|7,376|];
    [|8,377|];
    [|7,378|];
    [|8,379|];
    [|7,380|];
    [|8,381|];
    [|7,382|];
    [|8,383|];
    [|7,384|];
    [|8,385|];
    [|7,386|];
    [|8,387|];
    [|7,388|];
    [|8,389|];
    [|7,390|];
    [|8,391|];
    [|7,392|];
    [|8,393|];
    [|7,394|];
    [|8,395|];
    [|7,396|];
    [|8,397|];
    [|7,398|];
    [|8,399|];
    [|0,9|];
    [|408,400|];
    [||];
    [||];
    [||];
    [||];
    [||];
    [||];
    [||] |]

let states =  
    statesToConvert 
    |> Array.Parallel.map (fun x ->  
        x 
        |> Array.map (fun (x,y) -> x, y * 1<state>)) 
let startState = 0 * 1<state>
let finalState = 9 * 1<state>
let nontermCount = 9

let firstSet =
  set[|65536;65537;65538;65539;65540;65541;
       0;1;2;3;4;5;
       131072;131073;
       196608;196610;
       262144;262147;
       327680;327684;
       393216;393221;
       458758;
       524295|]

let private parserSource = new FSAParserSourceGLL (states, startState, finalState, nontermCount, numIsTerminal, numIsEpsilon, numToString, firstSet)
let buildAbstract : (AbstractAnalysis.Common.BioParserInputGraph -> ParserCommon.ParseResult<_>) =
    Yard.Generators.GLL.AbstractParserWithoutTreeFSAInput.buildAbstract parserSource

